/* [ Page ] _radioCheckbox.scss : 라디오/체크박스 */
/* [ Radio button ]
    @description : 기본 Radio 버튼
*/
$size : 18;
$sprite-rdoT : 280;
$sprite-chkT : 324;

// Radio
label.ImageRadio {
    margin-right:20px;
    cursor: pointer;
    
    > .Radio {
        position:static;
        width:#{$size}px;height:#{$size}px;
        margin:0;
        margin-right:10px;
    }
    
    &:after { // 라디오버튼 Image        
        left:0;
        width:#{$size}px;height:#{$size}px;
        margin-top:auto;top:50%;
        transform: translateY(-50%);
        font-size:#{$font-size}px;
        border-radius:50%;
        line-height:20px;
        background-color:#fff;
        @include sprite(31,$sprite-rdoT, 'false'); 
        transition:none;
        color:#ccc;
    }

    &.Checked::after {        
        @include sprite(75,$sprite-rdoT, 'false');  
    }
    
    &.Disabled { // disabled(S)
        cursor: not-allowed;        
        &::after {            
            background-position:-119px $sprite-rdoT;
        }        
        &.Checked::after {
            background-position:-160px $sprite-rdoT;
        }
    } // disabled(E)
    &:last-child {margin-right: 0;}
}





/* [ Checkbox ]
    @description : 기본 체크박스
*/
.ImageCheckbox { // 알로펙스 Checkbox    
    position: relative;
    cursor: pointer;    
    margin-right:15px;
    color:#1b1d1f;
    &:last-child {margin-right:0}
    
    &:after, &.Checked:after, 
    &.Disabled:after,
    &.af-checkbox-text.Checked.Disabled:after { // Disabled - 알로펙스 기본 class override 때문에 af-checkbox-text 추가
        background-image:none
    }; 


    > .Checkbox {
        position:static;
        width:#{$size}px;height:#{$size}px;
        margin:0;
        margin-right:10px;
    }

    &::after {
        @include sprite(31,$sprite-chkT);
        left:0;top:3px;  
        width:#{$size}px;height:#{$size}px;
        margin-top:auto;
        transition:none!important;
    }
    
    

    &.Checked {
        &::after {
            @include sprite(75,$sprite-chkT);
        }        
    }
    
    // Disabled
    &.Disabled {
        cursor:not-allowed;        
        &::after {
            @include sprite(119,$sprite-chkT);
            box-shadow: inset 0 0 1px 1px #ccc;
            border-radius: 5px;
        }
        &.Checked {
            &::after {
                @include sprite(160,$sprite-chkT);
                box-shadow: inset 0 0 1px 1px #d4d4d4;
            }
        }
    }

    &.switch {
        > .Checkbox {width:40px;height:20px;margin-right:10px;}
        &:after {
            content:"";
            left:0;
            width:40px;height:20px;
            background-color:#aaa;
            border-radius:20px;
            //repaint
            transition:background-color ease .2s;
        }
        &:before {
            display:block;content:"";
            position:absolute;left:1px;top:1px;
            @media all and (-ms-high-contrast:none) {top:2px}
            width:18px;height: 18px;
            box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.1);
            border-radius: 50px;
            background-color: #fff;
            z-index:1;
            //repaint
            transition:left ease .2s;
        }        
        
        &.Checked {
            &:after {background-color:orange}
            &:before {left:21px}
        }
    }

    // Error
    &.error {
    }

    // 그리드 - 그룹 Check
    &.grpChk {
        margin-right:10px;
        left:3px;
        &:after {color:#ccc};
        &.Checked:after {color:orange};

        //0121 수정
        left:-10px;
        margin-right:0px;
        @media all and (-ms-high-contrast:none) {left:-7px}
    }

}


.Multiselect .ui-multiselect-checkboxes li  { // 멀티셀렉트 Checkbox
    
    label { 
        &:after {
            
        }
        &.ui-checked:after {

        }
        input {
            
        }
    }
}


